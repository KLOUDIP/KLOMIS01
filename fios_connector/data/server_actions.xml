<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <!--extend server action to update contract start date and create contract when return-->
    <record id="vehicle_delivery.create_contract_vehicle" model="ir.actions.server">
        <field name="code">
            for rec in records:
                if rec.x_vehicle_id.id and rec.state == 'done' and not rec.x_contract_id and rec.picking_id.picking_type_id.code not in ['incoming']:
                    contract = env['fleet.vehicle.log.contract'].create({
                        'vehicle_id': rec.x_vehicle_id.id,
                        'x_lot_id': rec.lot_id.id,
                        'purchaser_id': rec.x_vehicle_id.driver_id.id,
                        'start_date': rec.date.date(),
                        'expiration_date': False,
                        'state': 'open',
                    })
                    rec.write({'x_contract_id': contract.id})
        </field>
    </record>


    <!--extend server action for create contract when create or write stock.picking when return-->
    <record id="vehicle_delivery.create_expire_contract_return" model="ir.actions.server">
        <field name="name">Expire contract on return</field>
        <field name="model_id" ref="stock.model_stock_move"/>
        <field name="binding_model_id" ref="stock.model_stock_move"/>
        <field name="state">code</field>
        <field name="code">
            for rec in records:
                if rec.origin_returned_move_id and rec.state == 'done' and rec.picking_id.picking_type_id.code in ['incoming']:
                    lines = rec.origin_returned_move_id.move_line_ids
                    if any(line.x_contract_id for line in rec.origin_returned_move_id.move_orig_ids.move_line_ids):
                        lines = rec.origin_returned_move_id.move_orig_ids.mapped('move_line_ids')
                    for ml in lines:
                        if ml.x_contract_id and ml.x_contract_id.state != 'closed':
                            map_move_line = rec.move_line_ids.filtered(lambda l: l.lot_id == ml.lot_id and l.x_vehicle_id == ml.x_vehicle_id)
                            if map_move_line:
                                ml.x_contract_id.write({'state': 'closed', 'expiration_date': datetime.datetime.today()})
                                map_move_line.write({'x_contract_id': ml.x_contract_id.id})
        </field>
    </record>
</odoo>